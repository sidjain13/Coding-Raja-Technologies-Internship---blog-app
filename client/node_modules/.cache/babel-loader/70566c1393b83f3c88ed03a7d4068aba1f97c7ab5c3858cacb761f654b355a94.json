{"ast":null,"code":"var _jsxFileName = \"D:\\\\web development\\\\blog app\\\\client\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [userData, setUserData] = useState({}); //getting data from the after getting auth middleware verify token and getting data of current login \n  const navigate = useNavigate();\n  useEffect(() => {\n    callAboutPage(); // can't use async function in useeffect hook\n  }, []);\n\n  // authenticate using cookie\n\n  const callAboutPage = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/home\", {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      });\n      const data = await res.json();\n      // console.log(data);\n      // console.log(data.name);\n      setUserData(data); //data contain user details\n    } catch (err) {\n      console.log(err);\n      // navigate(\"/login\"); \n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"fVPtJ3n+xvYWQHumS0F0y43lbyo=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Home","_s","userData","setUserData","navigate","useEffect","callAboutPage","res","fetch","method","headers","Accept","credentials","data","json","err","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/web development/blog app/client/src/components/Home.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n\r\n  const [userData,setUserData]=useState({});      //getting data from the after getting auth middleware verify token and getting data of current login \r\n  const navigate=useNavigate();\r\n  \r\n  useEffect(()=>{\r\n    callAboutPage();  // can't use async function in useeffect hook\r\n  },[])\r\n\r\n  // authenticate using cookie\r\n\r\n  const callAboutPage=async()=>{\r\n    try{\r\n \r\n      const res=await fetch(\"http://localhost:5000/home\",{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept:\"application/json\", \r\n          \"Content-Type\":\"application/json\"\r\n        },\r\n        credentials:\"include\"\r\n      });\r\n\r\n      \r\n      const data=await res.json(); \r\n      // console.log(data);\r\n      // console.log(data.name);\r\n      setUserData(data);          //data contain user details\r\n\r\n\r\n\r\n    }\r\n    catch(err){\r\n\r\n      console.log(err);\r\n      // navigate(\"/login\"); \r\n\r\n    }\r\n  }  \r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      home\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAM;EAChD,MAAMQ,QAAQ,GAACP,WAAW,CAAC,CAAC;EAE5BQ,SAAS,CAAC,MAAI;IACZC,aAAa,CAAC,CAAC,CAAC,CAAE;EACpB,CAAC,EAAC,EAAE,CAAC;;EAEL;;EAEA,MAAMA,aAAa,GAAC,MAAAA,CAAA,KAAS;IAC3B,IAAG;MAED,MAAMC,GAAG,GAAC,MAAMC,KAAK,CAAC,4BAA4B,EAAC;QACjDC,MAAM,EAAC,KAAK;QACZC,OAAO,EAAC;UACNC,MAAM,EAAC,kBAAkB;UACzB,cAAc,EAAC;QACjB,CAAC;QACDC,WAAW,EAAC;MACd,CAAC,CAAC;MAGF,MAAMC,IAAI,GAAC,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;MAC3B;MACA;MACAX,WAAW,CAACU,IAAI,CAAC,CAAC,CAAU;IAI9B,CAAC,CACD,OAAME,GAAG,EAAC;MAERC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB;IAEF;EACF,CAAC;EAID,oBACEhB,OAAA;IAAAmB,QAAA,EAAK;EAEL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAAArB,EAAA,CA/CKD,IAAI;EAAA,QAGOH,WAAW;AAAA;AAAA0B,EAAA,GAHtBvB,IAAI;AAiDV,eAAeA,IAAI;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}